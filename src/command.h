/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: command.proto */

#ifndef _LAMB_COMMAND_H
#define _LAMB_COMMAND_H

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

typedef struct _Request Request;
typedef struct _Response Response;
typedef struct _Connect Connect;

/* --- messages --- */

struct  _Request
{
  ProtobufCMessage base;
  int32_t id;
  int32_t type;
  char *addr;
};
#define LAMB_REQUEST_INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lamb_request_descriptor) \
    , 0, 0, (char *)protobuf_c_empty_string }


struct  _Response
{
  ProtobufCMessage base;
  int32_t id;
  char *host;
};
#define LAMB_RESPONSE_INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lamb_response_descriptor) \
    , 0, (char *)protobuf_c_empty_string }


struct  _Connect
{
  ProtobufCMessage base;
  int32_t id;
  int32_t type;
  char *addr;
};
#define LAMB_CONNECT_INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lamb_connect_descriptor) \
    , 0, 0, (char *)protobuf_c_empty_string }


/* Request methods */
void   lamb_request_init
                     (Request         *message);
size_t lamb_request_get_packed_size
                     (const Request   *message);
size_t lamb_request_pack
                     (const Request   *message,
                      uint8_t             *out);
size_t lamb_request_pack_to_buffer
                     (const Request   *message,
                      ProtobufCBuffer     *buffer);
Request *
       lamb_request_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lamb_request_free_unpacked
                     (Request *message,
                      ProtobufCAllocator *allocator);
/* Response methods */
void   lamb_response_init
                     (Response         *message);
size_t lamb_response_get_packed_size
                     (const Response   *message);
size_t lamb_response_pack
                     (const Response   *message,
                      uint8_t             *out);
size_t lamb_response_pack_to_buffer
                     (const Response   *message,
                      ProtobufCBuffer     *buffer);
Response *
       lamb_response_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lamb_response_free_unpacked
                     (Response *message,
                      ProtobufCAllocator *allocator);
/* Connect methods */
void   lamb_connect_init
                     (Connect         *message);
size_t lamb_connect_get_packed_size
                     (const Connect   *message);
size_t lamb_connect_pack
                     (const Connect   *message,
                      uint8_t             *out);
size_t lamb_connect_pack_to_buffer
                     (const Connect   *message,
                      ProtobufCBuffer     *buffer);
Connect *
       lamb_connect_unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lamb_connect_free_unpacked
                     (Connect *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Request_Closure)
                 (const Request *message,
                  void *closure_data);
typedef void (*Response_Closure)
                 (const Response *message,
                  void *closure_data);
typedef void (*Connect_Closure)
                 (const Connect *message,
                  void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor lamb_request_descriptor;
extern const ProtobufCMessageDescriptor lamb_response_descriptor;
extern const ProtobufCMessageDescriptor lamb_connect_descriptor;

PROTOBUF_C__END_DECLS


#endif
