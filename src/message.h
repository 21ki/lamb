/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: message.proto */

#ifndef PROTOBUF_C_message_2eproto__INCLUDED
#define PROTOBUF_C_message_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Submit Submit;
typedef struct _Report Report;
typedef struct _Deliver Deliver;
typedef struct _Message Message;


/* --- enums --- */


/* --- messages --- */

struct  _Submit
{
  ProtobufCMessage base;
  uint64_t id;
  int32_t account;
  int32_t company;
  char *spid;
  char *spcode;
  char *phone;
  int32_t msgfmt;
  int32_t length;
  ProtobufCBinaryData content;
};
#define SUBMIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&submit__descriptor) \
    , 0, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, {0,NULL} }


struct  _Report
{
  ProtobufCMessage base;
  uint64_t id;
  int32_t account;
  int32_t company;
  char *spcode;
  char *phone;
  int32_t status;
  char *submittime;
  char *donetime;
};
#define REPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&report__descriptor) \
    , 0, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _Deliver
{
  ProtobufCMessage base;
  uint64_t id;
  int32_t account;
  int32_t company;
  char *phone;
  char *spcode;
  char *serviceid;
  int32_t msgfmt;
  int32_t length;
  ProtobufCBinaryData content;
};
#define DELIVER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&deliver__descriptor) \
    , 0, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, {0,NULL} }


struct  _Message
{
  ProtobufCMessage base;
  uint64_t id;
  char *spid;
  char *spcode;
  char *phone;
  int32_t msgfmt;
  int32_t length;
  ProtobufCBinaryData content;
  int32_t channel;
};
#define MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&message__descriptor) \
    , 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, {0,NULL}, 0 }


/* Submit methods */
void   submit__init
                     (Submit         *message);
size_t submit__get_packed_size
                     (const Submit   *message);
size_t submit__pack
                     (const Submit   *message,
                      uint8_t             *out);
size_t submit__pack_to_buffer
                     (const Submit   *message,
                      ProtobufCBuffer     *buffer);
Submit *
       submit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   submit__free_unpacked
                     (Submit *message,
                      ProtobufCAllocator *allocator);
/* Report methods */
void   report__init
                     (Report         *message);
size_t report__get_packed_size
                     (const Report   *message);
size_t report__pack
                     (const Report   *message,
                      uint8_t             *out);
size_t report__pack_to_buffer
                     (const Report   *message,
                      ProtobufCBuffer     *buffer);
Report *
       report__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   report__free_unpacked
                     (Report *message,
                      ProtobufCAllocator *allocator);
/* Deliver methods */
void   deliver__init
                     (Deliver         *message);
size_t deliver__get_packed_size
                     (const Deliver   *message);
size_t deliver__pack
                     (const Deliver   *message,
                      uint8_t             *out);
size_t deliver__pack_to_buffer
                     (const Deliver   *message,
                      ProtobufCBuffer     *buffer);
Deliver *
       deliver__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   deliver__free_unpacked
                     (Deliver *message,
                      ProtobufCAllocator *allocator);
/* Message methods */
void   message__init
                     (Message         *message);
size_t message__get_packed_size
                     (const Message   *message);
size_t message__pack
                     (const Message   *message,
                      uint8_t             *out);
size_t message__pack_to_buffer
                     (const Message   *message,
                      ProtobufCBuffer     *buffer);
Message *
       message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   message__free_unpacked
                     (Message *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Submit_Closure)
                 (const Submit *message,
                  void *closure_data);
typedef void (*Report_Closure)
                 (const Report *message,
                  void *closure_data);
typedef void (*Deliver_Closure)
                 (const Deliver *message,
                  void *closure_data);
typedef void (*Message_Closure)
                 (const Message *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor submit__descriptor;
extern const ProtobufCMessageDescriptor report__descriptor;
extern const ProtobufCMessageDescriptor deliver__descriptor;
extern const ProtobufCMessageDescriptor message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_message_2eproto__INCLUDED */
